// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using entities;

namespace entities.Migrations
{
    [DbContext(typeof(EFApplicationContext))]
    [Migration("20191121182853_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("entities.empresa.Equipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(40);

                    b.HasKey("Id")
                        .HasName("pk_equipe");

                    b.ToTable("equipe","empresa");
                });

            modelBuilder.Entity("entities.empresa.EquipePessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<Guid>("EquipeId")
                        .HasColumnName("equipe_id");

                    b.Property<Guid>("PessoaId")
                        .HasColumnName("pessoa_id");

                    b.HasKey("Id")
                        .HasName("pk_equipe_pessoa");

                    b.HasIndex("EquipeId")
                        .HasName("ix_equipe_pessoa_equipe_id");

                    b.HasIndex("PessoaId")
                        .HasName("ix_equipe_pessoa_pessoa_id");

                    b.ToTable("equipe_pessoa","empresa");
                });

            modelBuilder.Entity("entities.empresa.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<string>("CpfCnpj")
                        .HasColumnName("cpf_cnpj")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(200);

                    b.Property<string>("Nacionalidade")
                        .HasColumnName("nacionalidade")
                        .HasMaxLength(40);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(40);

                    b.Property<string>("Rg")
                        .HasColumnName("rg")
                        .HasMaxLength(11);

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnName("sexo")
                        .HasMaxLength(40);

                    b.Property<string>("Telefone")
                        .HasColumnName("telefone")
                        .HasMaxLength(12);

                    b.Property<Guid>("UsuarioId")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_pessoa");

                    b.HasIndex("UsuarioId")
                        .HasName("ix_pessoa_usuario_id");

                    b.ToTable("pessoa","empresa");
                });

            modelBuilder.Entity("entities.empresa.PessoaCategoriaPessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<Guid>("PessoaId")
                        .HasColumnName("pessoa_id");

                    b.Property<Guid>("PessoaTipoId")
                        .HasColumnName("pessoa_tipo_id");

                    b.HasKey("Id")
                        .HasName("pk_pessoa_categoria_pessoa");

                    b.HasIndex("PessoaId")
                        .HasName("ix_pessoa_categoria_pessoa_pessoa_id");

                    b.HasIndex("PessoaTipoId")
                        .HasName("ix_pessoa_categoria_pessoa_pessoa_tipo_id");

                    b.ToTable("pessoa_categoria_pessoa","empresa");
                });

            modelBuilder.Entity("entities.empresa.PessoaTipo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(40);

                    b.Property<bool>("Operador")
                        .HasColumnName("operador");

                    b.HasKey("Id")
                        .HasName("pk_pessoa_tipo");

                    b.ToTable("pessoa_tipo","empresa");
                });

            modelBuilder.Entity("entities.logs.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AggregateEntity")
                        .HasColumnName("aggregate_entity");

                    b.Property<Guid>("AggregateId")
                        .HasColumnName("aggregate_id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<string>("Data")
                        .HasColumnName("data");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<string>("MessageType")
                        .HasColumnName("message_type");

                    b.Property<string>("Usuario")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_stored_event");

                    b.ToTable("stored_event","logs");
                });

            modelBuilder.Entity("seguranca.Modulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<string>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Nome")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_modulo");

                    b.ToTable("modulo","seguranca");
                });

            modelBuilder.Entity("seguranca.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("concurrency_stamp");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnName("normalized_name")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("pk_aspnetroles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("role_name_index");

                    b.ToTable("aspnetroles","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ClaimType")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("claim_value");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_aspnetroleclaims");

                    b.HasIndex("RoleId")
                        .HasName("ix_aspnetroleclaims_role_id");

                    b.ToTable("aspnetroleclaims","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilModulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<Guid>("ModuloId")
                        .HasColumnName("modulo_id");

                    b.Property<Guid>("PerfilId")
                        .HasColumnName("perfil_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_modulo");

                    b.HasIndex("ModuloId")
                        .HasName("ix_perfil_modulo_modulo_id");

                    b.HasIndex("PerfilId")
                        .HasName("ix_perfil_modulo_perfil_id");

                    b.ToTable("perfil_modulo","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilModuloPermissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<Guid>("PerfilModuloId")
                        .HasColumnName("perfil_modulo_id");

                    b.Property<Guid>("PermissaoId")
                        .HasColumnName("permissao_id");

                    b.HasKey("Id")
                        .HasName("pk_modulo_permissao");

                    b.HasIndex("PerfilModuloId")
                        .HasName("ix_modulo_permissao_perfil_modulo_id");

                    b.HasIndex("PermissaoId")
                        .HasName("ix_modulo_permissao_permissao_id");

                    b.ToTable("modulo_permissao","seguranca");
                });

            modelBuilder.Entity("seguranca.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<string>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Nome")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_permissao");

                    b.ToTable("permissao","seguranca");
                });

            modelBuilder.Entity("seguranca.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("CpjCnpj")
                        .HasColumnName("cpj_cnpj")
                        .HasMaxLength(14);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("lockout_end");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(40);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnName("normalized_email")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("normalized_user_name")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("pk_aspnetusers");

                    b.HasIndex("NormalizedEmail")
                        .HasName("email_index");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("user_name_index");

                    b.ToTable("aspnetusers","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ClaimType")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("claim_value");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_aspnetuserclaims");

                    b.HasIndex("UserId")
                        .HasName("ix_aspnetuserclaims_user_id");

                    b.ToTable("aspnetuserclaims","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnName("login_provider");

                    b.Property<string>("ProviderKey")
                        .HasColumnName("provider_key");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnName("provider_display_name");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_aspnetuserlogins");

                    b.HasIndex("UserId")
                        .HasName("ix_aspnetuserlogins_user_id");

                    b.ToTable("aspnetuserlogins","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioPerfil", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_aspnetuserroles");

                    b.HasIndex("RoleId")
                        .HasName("ix_aspnetuserroles_role_id");

                    b.ToTable("aspnetuserroles","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("LoginProvider")
                        .HasColumnName("login_provider");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_aspnetusertokens");

                    b.ToTable("aspnetusertokens","seguranca");
                });

            modelBuilder.Entity("entities.empresa.EquipePessoa", b =>
                {
                    b.HasOne("entities.empresa.Equipe", "Equipe")
                        .WithMany("EquipePessoa")
                        .HasForeignKey("EquipeId")
                        .HasConstraintName("fk_equipe_pessoa_equipe_equipe_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("entities.empresa.Pessoa", "Pessoa")
                        .WithMany("EquipePessoa")
                        .HasForeignKey("PessoaId")
                        .HasConstraintName("fk_equipe_pessoa_pessoa_pessoa_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("entities.empresa.Pessoa", b =>
                {
                    b.HasOne("seguranca.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("fk_pessoa_asp_net_users_usuario_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("entities.empresa.PessoaCategoriaPessoa", b =>
                {
                    b.HasOne("entities.empresa.Pessoa", "Pessoa")
                        .WithMany("PessoaCategoriaPessoa")
                        .HasForeignKey("PessoaId")
                        .HasConstraintName("fk_pessoa_categoria_pessoa_pessoa_pessoa_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("entities.empresa.PessoaTipo", "PessoaTipo")
                        .WithMany("PessoaCategoriaPessoa")
                        .HasForeignKey("PessoaTipoId")
                        .HasConstraintName("fk_pessoa_categoria_pessoa_pessoa_tipo_pessoa_tipo_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.PerfilClaim", b =>
                {
                    b.HasOne("seguranca.Perfil")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_aspnetroleclaims_aspnetroles_role_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.PerfilModulo", b =>
                {
                    b.HasOne("seguranca.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .HasConstraintName("fk_perfil_modulo_modulo_modulo_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("seguranca.Perfil", "Perfil")
                        .WithMany("Modulos")
                        .HasForeignKey("PerfilId")
                        .HasConstraintName("fk_perfil_modulo_aspnetroles_perfil_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.PerfilModuloPermissao", b =>
                {
                    b.HasOne("seguranca.PerfilModulo", "PerfilModulo")
                        .WithMany("Permissoes")
                        .HasForeignKey("PerfilModuloId")
                        .HasConstraintName("fk_modulo_permissao_perfil_modulo_perfil_modulo_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("seguranca.Permissao", "Permissao")
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .HasConstraintName("fk_modulo_permissao_permissao_permissao_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioClaim", b =>
                {
                    b.HasOne("seguranca.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetuserclaims_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioLogin", b =>
                {
                    b.HasOne("seguranca.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetuserlogins_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioPerfil", b =>
                {
                    b.HasOne("seguranca.Perfil", "Role")
                        .WithMany("Papeis")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_aspnetuserroles_aspnetroles_role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("seguranca.Usuario", "User")
                        .WithMany("Papeis")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetuserroles_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioToken", b =>
                {
                    b.HasOne("seguranca.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetusertokens_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
